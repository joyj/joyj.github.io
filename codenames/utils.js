var wordList = [
    "ACNE",
    "ACRE",
    "ADDENDUM",
    "ADVERTISE",
    "AIRCRAFT",
    "AISLE",
    "ALLIGATOR",
    "ALPHABETIZE",
    "AMERICA",
    "ANKLE",
    "APATHY",
    "APPLAUSE",
    "APPLESAUCE",
    "APPLICATION",
    "ARCHAEOLOGIST",
    "ARISTOCRAT",
    "ARM",
    "ASLEEP",
    "ASTRONAUT",
    "ATHLETE",
    "ATLANTIS",
    "AUNT",
    "AVOCADO",
    "BABY-SITTER",
    "BACKBONE",
    "BAG",
    "BAGUETTE",
    "BALD",
    "BALLOON",
    "BANANA",
    "BASEBALL",
    "BASKETBALL",
    "BAT",
    "BATTERY",
    "BEACH",
    "BEDBUG",
    "BEER",
    "BEETHOVEN",
    "BELT",
    "BIB",
    "BICYCLE",
    "BIKE",
    "BILLBOARD",
    "BIRD",
    "BIRTHDAY",
    "BITE",
    "BLANKET",
    "BLEACH",
    "BLOSSOM",
    "BLUEPRINT",
    "BLUNT",
    "BLUR",
    "BOA",
    "BOAT",
    "BOBSLED",
    "BODY",
    "BOMB",
    "BOOK",
    "BOOTH",
    "BOWTIE",
    "BOX",
    "BRAINSTORM",
    "BRAND",
    "BRAVE",
    "BRIDGE",
    "BROCCOLI",
    "BROKEN",
    "BROOM",
    "BRUISE",
    "BUBBLE",
    "BUDDY",
    "BUFFALO",
    "BULB",
    "BUNNY",
    "BUS",
    "BUY",
    "CABIN",
    "CAFETERIA",
    "CAKE",
    "CALCULATOR",
    "CAMPSITE",
    "CAN",
    "CANADA",
    "CANDLE",
    "CANDY",
    "CAPE",
    "CAR",
    "CARDBOARD",
    "CAT",
    "CD",
    "CEILING",
    "CELL",
    "CENTURY",
    "CHAIR",
    "CHALK",
    "CHAMPION",
    "CHARGE",
    "CHEERLEADER",
    "CHEF",
    "CHESS",
    "CHEW",
    "CHICKEN",
    "CHIME",
    "CHINA",
    "CHOCOLATE",
    "CHURCH",
    "CIRCUS",
    "CLAY",
    "CLIFF",
    "CLOAK",
    "CLOCKWORK",
    "CLOWN",
    "CLUE",
    "COACH",
    "COAL",
    "COASTER",
    "COG",
    "COLD",
    "COLLEGE",
    "COMFORT",
    "COMPUTER",
    "CONE",
    "CONVERSATION",
    "COOK",
    "COOP",
    "CORD",
    "CORDUROY",
    "COT",
    "COUGH",
    "COW",
    "COWBOY",
    "CRAYON",
    "CREAM",
    "CRISP",
    "CRITICIZE",
    "CROW",
    "CRUISE",
    "CRUMB",
    "CRUST",
    "CUFF",
    "CURTAIN",
    "DAD",
    "DART",
    "DAWN",
    "DAY",
    "DEEP",
    "DEFECT",
    "DENT",
    "DENTIST",
    "DESK",
    "DICTIONARY",
    "DIMPLE",
    "DIRTY",
    "DISMANTLE",
    "DITCH",
    "DIVER",
    "DOCTOR",
    "DOG",
    "DOGHOUSE",
    "DOLL",
    "DOMINOES",
    "DOOR",
    "DOT",
    "DRAIN",
    "DRAW",
    "DREAM",
    "DRESS",
    "DRINK",
    "DRIP",
    "DRUMS",
    "DRYER",
    "DUCK",
    "DUMP",
    "DUNK",
    "DUST",
    "EAR",
    "EAT",
    "EBONY",
    "ELBOW",
    "ELECTRICITY",
    "ELEPHANT",
    "ELEVATOR",
    "ELF",
    "ENGINE",
    "ENGLAND",
    "ESCALATOR",
    "EUROPE",
    "EVOLUTION",
    "EXTENSION",
    "EYEBROW",
    "FAN",
    "FANCY",
    "FAST",
    "FEAST",
    "FENCE",
    "FIDDLE",
    "FIGMENT",
    "FINGER",
    "FIRE",
    "FIRST",
    "FISHING",
    "FIX",
    "FIZZ",
    "FLAGPOLE",
    "FLANNEL",
    "FLASHLIGHT",
    "FLOCK",
    "FLOWER",
    "FLU",
    "FLUSH",
    "FLUTTER",
    "FOG",
    "FOIL",
    "FOOTBALL",
    "FOREHEAD",
    "FOREVER",
    "FORTNIGHT",
    "FRANCE",
    "FRECKLE",
    "FRINGE",
    "FROG",
    "FROWN",
    "GALLOP",
    "GAME",
    "GARBAGE",
    "GARDEN",
    "GASOLINE",
    "GEM",
    "GINGER",
    "GINGERBREAD",
    "GIRL",
    "GLASSES",
    "GOBLIN",
    "GOLD",
    "GOODBYE",
    "GRANDPA",
    "GRAPE",
    "GRASS",
    "GRATITUDE",
    "GRAY",
    "GREEN",
    "GUITAR",
    "GUM",
    "GUMBALL",
    "HAIR",
    "HALF",
    "HANDLE",
    "HANDWRITING",
    "HANG",
    "HAPPY",
    "HAT",
    "HATCH",
    "HEADACHE",
    "HEART",
    "HEDGE",
    "HELICOPTER",
    "HEM",
    "HIDE",
    "HILL",
    "HOCKEY",
    "HOMEWORK",
    "HONK",
    "HOPSCOTCH",
    "HORSE",
    "HOSE",
    "HOT",
    "HOUSE",
    "HOUSEBOAT",
    "HUG",
    "HUMIDIFIER",
    "HUNGRY",
    "HURDLE",
    "HURT",
    "HUT",
    "ICE",
    "INN",
    "INTERN",
    "INTERNET",
    "INVITATION",
    "IVORY",
    "IVY",
    "JADE",
    "JAPAN",
    "JEANS",
    "JELLY",
    "JET",
    "JIG",
    "JOG",
    "JOURNAL",
    "JUMP",
    "KEY",
    "KILLER",
    "KILOGRAM",
    "KING",
    "KITCHEN",
    "KITE",
    "KNEE",
    "KNEEL",
    "KNIFE",
    "KNIGHT",
    "KOALA",
    "LACE",
    "LADDER",
    "LADYBUG",
    "LAG",
    "LANDFILL",
    "LAP",
    "LAUGH",
    "LAUNDRY",
    "LAW",
    "LAWN",
    "LAWNMOWER",
    "LEAK",
    "LEG",
    "LETTER",
    "LEVEL",
    "LIFESTYLE",
    "LIGHT",
    "LIGHTSABER",
    "LIME",
    "LION",
    "LIZARD",
    "LOG",
    "LOLLIPOP",
    "LOVESEAT",
    "LOYALTY",
    "LUNCH",
    "LUNCHBOX",
    "LYRICS",
    "MACHINE",
    "MACHO",
    "MAILBOX",
    "MAMMOTH",
    "MARK",
    "MARS",
    "MASCOT",
    "MAST",
    "MATCHSTICK",
    "MATE",
    "MATTRESS",
    "MESS",
    "MEXICO",
    "MIDSUMMER",
    "MINE",
    "MISTAKE",
    "MODERN",
    "MOLD",
    "MOM",
    "MONDAY",
    "MONEY",
    "MONITOR",
    "MONSTER",
    "MOON",
    "MOP",
    "MOTH",
    "MOTORCYCLE",
    "MOUNTAIN",
    "MOUSE",
    "MOWER",
    "MUD",
    "MUSIC",
    "MUTE",
    "NATURE",
    "NEGOTIATE",
    "NEIGHBOR",
    "NEST",
    "NEUTRON",
    "NIECE",
    "NIGHT",
    "NIGHTMARE",
    "NOSE",
    "OAR",
    "OBSERVATORY",
    "OFFICE",
    "OIL",
    "OLD",
    "OLYMPIAN",
    "OPAQUE",
    "OPENER",
    "ORBIT",
    "ORGAN",
    "ORGANIZE",
    "OUTER",
    "OUTSIDE",
    "PAIL",
    "PAINT",
    "PAJAMAS",
    "PALACE",
    "PANTS",
    "PAPER",
    "PARK",
    "PARODY",
    "PARTY",
    "PASSWORD",
    "PASTRY",
    "PAWN",
    "PEAR",
    "PEN",
    "PENCIL",
    "PENDULUM",
    "PENNY",
    "PEPPER",
    "PERSONAL",
    "PHILOSOPHER",
    "PHONE",
    "PHOTOGRAPH",
    "PIANO",
    "PICNIC",
    "PIGPEN",
    "PILLOW",
    "PILOT",
    "PINCH",
    "PING",
    "PINWHEEL",
    "PIRATE",
    "PLAID",
    "PLAN",
    "PLANK",
    "PLATE",
    "PLATYPUS",
    "PLAYGROUND",
    "PLOW",
    "PLUMBER",
    "POCKET",
    "POEM",
    "POINT",
    "POLE",
    "POOL",
    "POPSICLE",
    "POPULATION",
    "PORTFOLIO",
    "POSITIVE",
    "POST",
    "PRINCESS",
    "PROCRASTINATE",
    "PSYCHOLOGIST",
    "PUBLISHER",
    "PUNK",
    "PUPPET",
    "PUPPY",
    "PUSH",
    "PUZZLE",
    "QUARANTINE",
    "QUEEN",
    "QUICKSAND",
    "QUIET",
    "RACE",
    "RADIO",
    "RAFT",
    "RAG",
    "RAINBOW",
    "RAINWATER",
    "RANDOM",
    "RAY",
    "RECYCLE",
    "RED",
    "REGRET",
    "REIMBURSEMENT",
    "RETALIATE",
    "RIB",
    "RIDDLE",
    "RIM",
    "RINK",
    "ROLLER",
    "ROOM",
    "ROSE",
    "ROUND",
    "ROUNDABOUT",
    "RUNG",
    "RUNT",
    "RUT",
    "SAD",
    "SAFE",
    "SALMON",
    "SALT",
    "SANDBOX",
    "SANDCASTLE",
    "SANDWICH",
    "SATELLITE",
    "SCAR",
    "SCARED",
    "SCHOOL",
    "SCRAMBLE",
    "SEASHELL",
    "SEASON",
    "SENTENCE",
    "SEQUINS",
    "SET",
    "SHAFT",
    "SHALLOW",
    "SHAMPOO",
    "SHARK",
    "SHEEP",
    "SHEETS",
    "SHERIFF",
    "SHIPWRECK",
    "SHIRT",
    "SHOELACE",
    "SHORT",
    "SHOWER",
    "SHRINK",
    "SICK",
    "SILHOUETTE",
    "SINGER",
    "SIP",
    "SKATE",
    "SKI",
    "SLAM",
    "SLEEP",
    "SLING",
    "SLOW",
    "SLUMP",
    "SNEEZE",
    "SNOW",
    "SNUGGLE",
    "SONG",
    "SPACE",
    "SPARE",
    "SPEAKERS",
    "SPIDER",
    "SPIT",
    "SPONGE",
    "SPOOL",
    "SPOON",
    "SPRING",
    "SPRINKLER",
    "SPY",
    "SQUARE",
    "SQUINT",
    "STAIRS",
    "STANDING",
    "STAR",
    "STATE",
    "STICK",
    "STOCKHOLDER",
    "STOPLIGHT",
    "STOUT",
    "STOVE",
    "STOWAWAY",
    "STRAW",
    "STREAM",
    "STREAMLINE",
    "STRIPE",
    "STUDENT",
    "SUN",
    "SUNBURN",
    "SUSHI",
    "SWAMP",
    "SWARM",
    "SWEATER",
    "SWIMMING",
    "SWING",
    "TALK",
    "TAXI",
    "TEACHER",
    "TEAPOT",
    "TEENAGER",
    "TELEPHONE",
    "TEN",
    "TENNIS",
    "THIEF",
    "THINK",
    "THRONE",
    "THROUGH",
    "THUNDER",
    "TIDE",
    "TIGER",
    "TIME",
    "TINTING",
    "TIPTOE",
    "TIPTOP",
    "TIRED",
    "TISSUE",
    "TOAST",
    "TOILET",
    "TOOL",
    "TOOTHBRUSH",
    "TORNADO",
    "TOURNAMENT",
    "TRACTOR",
    "TRAIN",
    "TRASH",
    "TREASURE",
    "TREE",
    "TRIANGLE",
    "TRIP",
    "TRUCK",
    "TUB",
    "TUBA",
    "TUTOR",
    "TELEVISION",
    "TWANG",
    "TWIG",
    "TYPE",
    "UNEMPLOYED",
    "UPGRADE",
    "VEST",
    "VISION",
    "WAG",
    "WATER",
    "WATERMELON",
    "WAX",
    "WEDDING",
    "WEED",
    "WHEELCHAIR",
    "WHIPLASH",
    "WHISK",
    "WHISTLE",
    "WHITE",
    "WIG",
    "WILL",
    "WINDMILL",
    "WINTER",
    "WISH",
    "WOLF",
    "WOOL",
    "WORLD",
    "WORM",
    "WRISTWATCH",
    "YARDSTICK",
    "ZEN",
    "ZERO",
    "ZIPPER",
    "ZONE",
    "ZOO",
]

// From a seed, generate one number between min and max.
function getRandom(seed, min, max) {
    min = min || 0;
    max = max || 1;

    var curSeed = seed;
    function genOne() {
        var rnd = new Math.seedrandom(curSeed);
        curSeed = rnd();
        return min + curSeed * (max - min);
    }
    return genOne;
}

function seededShuffle(seed, array) {
    var numToItem = {};
    var nums = [];

    var rand = getRandom(seed);
    _.each(array, function(item) {
        var randNum = rand();
        while (randNum in numToItem) {
            randNum = rand();  // Make sure all keys are unique.
        }
        numToItem[randNum] = item;
        nums.push(randNum);
    });

    nums.sort();
    var shuffledArray = [];
    _.each(nums, function(num) {
        shuffledArray.push(numToItem[num]);
    });
    return shuffledArray;
}

// Given a seedStr (seed that is a string, case insensitive), generate a list of
// words from the master list.
// numWords is optional, default is 25.
// allWords is an optional list of words to choose from.
function genWords(seedStr, numWords, allWords) {
    seedStr = seedStr.toLowerCase();
    numWords = numWords || 25;
    allWords = allWords || wordList;
    var wordsToReturn = [];

    var randomIndex = getRandom(seedStr, 0, allWords.length - 1);
    for (var i = 0; i < numWords; i++) {
        var wordIndex = Math.floor(randomIndex());
        wordsToReturn.push(allWords[wordIndex]);
    }
    return wordsToReturn;
}

// Generate a random seedString.
// For now, this is guaranteed to be a string of 3 lowercase alphabet letters.
function genSeedString() {
    var seedStr = "";

    var letters = "abcdefghijklmnopqrstuvwxyz";
    for (var i = 0; i < 3; i++) {
        seedStr += letters.charAt(Math.floor(Math.random() * letters.length));
    }
    return seedStr;
}

// Usually, the board is 5x5 and each cell belongs to either teamA, teamB,
// neutral, or bomb (instant death).
var cellOwner = {
    TEAM_A: "TEAM_A",
    TEAM_B: "TEAM_B",
    NEUTRAL: "NEUTRAL",
    BOMB: "BOMB",
    UNKNOWN: "UNKNOWN",
};

var teams = [cellOwner.TEAM_A, cellOwner.TEAM_B];
function getFirstTeam(seed) {
    seed = seed || genSeedString();
    var rand = getRandom(seed);
    return teams[Math.floor(rand() * teams.length)];
}
function getOtherTeam(team) {
    if (team === teams[0]) {
        return teams[1];
    }
    return teams[0];
}

// Generate a random boardConfiguration based on a seed.
// firstTeam is optional, but determines which team goes first.
function genBoardOwners(seedStr, firstTeam) {
    seedStr = seedStr || genSeedString();
    seedStr = seedStr.toLowerCase();
    var firstTeam = firstTeam || getFirstTeam();
    var secondTeam = getOtherTeam(firstTeam);

    // Team that goes first always has 9, second team always has 8.
    var numToAllocate = {};
    numToAllocate[firstTeam] = 9;
    numToAllocate[secondTeam] = 8;
    numToAllocate[cellOwner.BOMB] = 1;
    numToAllocate[cellOwner.NEUTRAL] = 7;

    var cells = [];
    _.each(numToAllocate, function(allocations, owner) {
        for (var i = 0; i < allocations; i++) {
            cells.push(owner);
        }
    });
    return seededShuffle(seedStr, cells);
}


// Given a seedStr (seed that is a string, case insensitive), generate a list of
// objects {word: "word", owner: "owner"}.
function genCompleteBoard(seedStr, firstTeam) {
    seedStr = seedStr.toLowerCase();  // Make the seedStr case insensitive.
    var words = genWords(seedStr);
    var owners = genBoardOwners(firstTeam);

    var cells = [];
    for (var i = 0; i < owners.length; i++) {
        cells.push({"word": words[i], "owner": owners[i]});
    }
    return cells;
}
